FORMAT: 1A
HOST: http://localhost:5000

# friendsNet APIs

The main aim of the social network web APIs is to allow people from different places to 
get in touch each other. People have to register and successively log into the platform in order 
to be able to use its functionalities providing a username and a password.
Every user can post new statuses on their profiles and update/remove previous ones.
Moreover, users can update their own profile picture, add/remove people to/from their friends or 
canceling pending requests, create/delete a group, add/remove themselves or other members to/from 
the group as well as accept requests from other users and change the group picture, 
comment/rate their own statuses and their friendsâ€™ statuses, search other users by their names, 
send/receive private messages to/from any friend and start a conversation.


# Group Profiles


## User Profile [/profiles/user-profile]

Profile definition for all user profile related resources.

### Dependencies

This profile inherits:
 * Some semantic descriptors from http://schema.org/Person.
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml).
 * Some link relations from [Microformat.org](http://microformats.org/wiki/existing-rel-values).

### Link relations

 * `user profile` : Public profile of the user. Each item is an instance of type User Profile defined in this profile.
 * `user credentials` : Private information about the user (id, email, password). The fields are defined in this profile.
 * `user memberships` : All memberships that indicate groups in which the user is member. Each element is an instance of type Group Membership defined in the profile [Group membership](resource/profile/group_membership-profile).
 * `user membership` : Single membership between the user and a group in which he is a member. The element is an instance of type Group Membership defined in the profile [Group membership](resource/profile/group_membership-profile).
 * `user comments` : All comments posted by the user to any statuses. Each element is an instance of type Comment defined in the profile [Comment](resource/profile/comment-profile).
 * `user rates` : All rates given by the user to any statuses. Each element is an instance of type Rate defined in the profile [Rate](resource/profile/rate-profile).
 * `user tags` : All statues in which the user has been tagged. Each element is an instance of type Status defined in the profile [Status](resource/profile/status-profile).
 * `user statuses` : All statuses for which the user is the author. Each element is an instance of type Status defined in the profile [Status](resource/profile/status-profile).
 * `user friendships` : All friendhsips and friendship requests in which the user is involved. Each element is an instance of type Friendship defined in the profile [Friendship](resource/profile/friendship-profile).
 * `user conversations` : All conversations in which the user is involved. Each element is an instance of type Conversation defined in the profile [Conversaton](resource/profile/conversation-profile).
 * `user feed` : Most recent statuses posted by user's friends not in any group. Each element is an instance of type Status defined in the profile [Status](resource/profile/status-profile).
 * `profile picture` : Photo chosen by the user to identify himself. The element is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).

Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `author`: See [author](https://www.w3.org/TR/html5/links.html#link-type-author).
 * `tag`: See [tag](https://www.w3.org/TR/html5/links.html#link-type-tag).
 * `friend`: See [friend](http://microformats.org/wiki/rel-friend).

### Semantic Descriptors

#### Data Type User

 * `id` (int): Unique identifier for the user.
 * `password` (string): User password (not shorter than 8 characters).
 * `registration_time` (long): Time in milliseconds when the user registered into the platform;
 * `prof_picture_id` (int): Identifier for the user's profile picture.
 * `age` (int): Age of the user.
 * `gender` (int) : Gender of the user (0 = male, 1 = female, 2 = not specified).
 
Inherited from [schema.org/Person](http://schema.org/Person)
 * `email` (string): See [http://schema.org/email](http://schema.org/email).
 * `first_name` (string): See [http://schema.org/givenName](http://schema.org/givenName).
 * `middle_name` (string): See [http://schema.org/additionalName](http://schema.org/additionalName).
 * `surname` (string): See [http://schema.org/familyName](http://schema.org/familyName).

### GET

Return the User profile in HTML format
+ Response 200 (text/html)

## Media item Profile [/profiles/media_item-profile]

Profile definition for all media item related resources.

### Dependencies

This profile inherits:
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)

### Link relations

 * `media list` : Redirects to the URI for all media items in the platform where is possbile to add a new media item.

### Semantic Descriptors

#### Data Type Media item

 * `id` (int): Unique identifier for the media item.
 * `media_item_type` (int) : Type of media item (0 = photo, 1 = video).
 * `description` (string): Textual description for the media item.
 
Inherited from [schema.org/Thing](http://schema.org/Thing)
 * `url` (string): See [http://schema.org/url](http://schema.org/url).

### GET

Return the Media Item profile in HTML format
+ Response 200 (text/html)

## Comment Profile [/profile/comment-profile]

Profile definition for all comment related resources.

### Dependencies

This profile inherits:
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)

### Link relations

* `status`: Status to which the comment refers. The item is an istance of Status defined in profile [Status](resource/profile/status-profile)

Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `author`: See [author](https://www.w3.org/TR/html5/links.html#link-type-author).

#### Data type Comment

* `id` (int): Unique identifier for the comment.
* `status_id` (int): Identifier for the status commented.
* `user_id` (int): Identifier for the user who posted the comment.
* `content` (txt): Textual content of the comment.
* `creation_time` (long): Time in milliseconds when the comment was created.

### GET

Return the Comment profile in HTML format
+ Response 200 (text/html)

## Conversation Profile [/profile/conversation-profile]

Profile definition for all conversation related resources.

### Link relations

* `conversation messages`:  This action lists messages belonging to the conversation. Each item is an instance of Message defined in profile [Message](resource/profile/message-profile).
* `user profile`: This action lists user profile of the user involved in the conversation. The item is an instance of User Profile define in profile [User](resource/profile/user-profile).
* `user contacted profile`: This action lists the other member of conversation profile. The item is an instance of User Profile define in profile [User](resource/profile/user-profile).
* `user conversations`: This action lists conversations in which the first user is involved. Each item is instance of Conversation defined in profile [Conversation](resource/profile/conversation-profile).

#### Data type Conversation

* `id` (int): Unique identifier for the conversation.
* `user1_id` (int): Identifier for the first user involved in the conversation.
* `user2_id` (int): Identifier for the second user involved in the conversation.
* `time_last_message` (long): Time in milliseconds when the last message of the conversation was sent.

### GET

Return the Conversation profile in HTML format
+ Response 200 (text/html)

## Friendship Profile [/profile/friendship-profile]

Profile definition for all friendship related resources.

### Dependencies

This profile inherits:
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)

### Link relations

* `user_profile`: This action list user's friend's profile. The item is an istance of User Profile defined in profile [User](resource/profile/user-profile).

Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `friend`: See [friend](https://www.w3.org/TR/html5/links.html#link-type-author)

#### Data type Friendship

* `id` (int): Unique identifier for the friendship.
* `user1_id` (int): Identifier for first user in friendship.
* `user2_id` (int): Identifier for second user in friendship.
* `friendship_status` (int): Status of a friendship (0 = pending, 1 = accepted).
* `friendship_start` (long): Time in milliseconds when the friendship started. Time is not set for pending friendships.

### GET

Return the Friendship profile in HTML format
+ Response 200 (text/html)

## Message Profile [/profile/message-profile]

Profile definition for all message related resources.
 
### Link relations

* `user conversations`: lists conversations in which the user is involved. Each item is an instance of Conversation defined in profile [Conversation](resource/profile/conversation-profile).

#### Data type Message

* `conversation_id` (int): Identifier for the conversation.
* `sender_id` (int): identifier for the message sender.
* `content` (string): Textual content of the message.
* `time_sent` (long): Time in milliseconds when the message was sent.

### GET

Return the Message profile in HTML format
+ Response 200 (text/html)

## Rate Profile [/profile/rate-profile]

Profile definition for all rate related resources.

### Dependencies

This profile inherits:
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)

### Link relations

* `status`: This action gets the status that is rated. A status is an istance of Status defined in profile [Status](resource/profile/status-profile).

Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `author`: See [author](https://www.w3.org/TR/html5/links.html#link-type-author).

#### Data type Rate

* `id` (int): Unique identifier for the rate.
* `status_id` (int): Identifier for the status rated.
* `user_id` (int): Identifier for the user who gave the rate.
* `rate` (int): Value of the rate (0 = min, 5 = max).

### GET

Return the Rate profile in HTML format
+ Response 200 (text/html)

## Status Profile [/profile/status-profile]

Profile definition for all status related resources.

### Dependencies

This profile inherits:
 * Some link  relations from IANA Web linking [RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)

### Link relations

* `status`: This action gets the status that is rated. A status is an istance of Status defined in profile [Status](resource/profile/status-profile).
* `status comments`: This action lists all comments posted for a status. Each item is an istance of Comment defined in profile [Comment](resource/profile/comment-profile).
* `status rates`: This action lists all rates given to a status. Each item is an istance of Rate defined in profile [Rate](resource/profile/rate-profile).
* `status tags`: This action lists all users tagged into a status. Each item is an istance of User Profile defined in profile [User](resource/profile/user-profile).
* `media list`: This action lists all media items attached to the status. Each item is an istance of Media Item defined in profile [Media item](resource/profile/media_item-profile).

Inherited from [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml)
 * `author`: See [author](https://www.w3.org/TR/html5/links.html#link-type-author)

#### Data type Status

* `id` (int): Unique identifier for the status.
* `user_id` (int): Identifier for the user who created the status.
* `content` (string): Textual content of the status.
* `creation_time` (long): Time in milliseconds when the status was created.

### GET

Return the Status profile in HTML format
+ Response 200 (text/html)

## Group Profile [/profiles/group-profile]

Profile definition for all group related resources.

### Link relations

 * `groups`: It redirects to the URI of the groups where it's possible to add a new group.
 * `group`: Lists the group corresponding to the id given. The item is an instance of Group defined in this profile.
 * `group members`: Lists all memberships for the group with id given. The item is an instance of Group Membership defined in profile [Group membership](resource/profile/group_membership-profile)
 * `group requests`: Lists all pending requests for the group with id given. The item is an instance of Group Request defined in profile [Group request](resource/profile/group_request-profile).
 * `group statuses`: Lists all statuses posted in the group with id given. The item is an instance of Status defined in profile [Status](resource/profile/status-profile).
 * `profile picture` : Photo which is used to identify the group with id given. The item is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).

### Semantic Descriptors

#### Data Type Media item

 * `id` (int): Unique identifier for the group.
 * `name` (string) : Name given to the group.
 * `description` (string): Textual description for the group.
 * `prof_picture_id` (int): Identifier for the group profile picture.
 * `privacy_level` (int): Privacy level for the group (0 = secret, 1 = closed, 2 = open). A secret group can be joined just by group administrator's invitation,
 a closed group needs user to send a request that will be accepted/declined by group administrators, and an open group can be joined by any user.
 
Inherited from [schema.org/Thing](http://schema.org/Thing)
 * `url` (string): See [http://schema.org/url](http://schema.org/url).

### GET

Return the Media Item profile in HTML format
+ Response 200 (text/html)

## Membership request Profile [/profile/request-profile]

Profile definition for all membership request related resources.

### Link relations

* `groups`: It redirects to the URI of the groups where it's possible to add a new group.
* `group`: Lists the group whose membership request is being retreived. The item is an instance of Group defined in profile [Group](resource/profile/group-profile)
* `group members`: Lists all memberships for the group whose membership request is being retreived. The item is an instance of Group Membership defined in profile [Group membership](resource/profile/group_membership-profile)
* `group requests`: Lists all pending requests for the group whose membership request is being retreived. The item is an instance of Group Request defined in this profile.
* `group statuses`: Lists all statuses posted in the group whose membership request is being retreived. The item is an instance of Status defined in profile [Status](resource/profile/status-profile).
* `profile picture` : Photo which is used to identify the group whose membership request is being retreived. The item is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).
* `user profile`: This action lists user profile who sent the request to the group. The item is an instance of type User Profile defined in the profile [User](resource/profile/user-profile).
* `user profile picture` : Photo chosen by user sending the request to indentify himself. The item is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).
* `user memberships` : All memberships involving the user who sent the request. Each item is an instance of type Group Membership defined in the profile [Group membership](resource/profile/group_membership-profile).

#### Data type Membership Request

* `id` (int): Identifier of the group
* `user_id` (int): Identifier for the user who requested to join the group.

### GET

Return the Membership Request profile in HTML format
+ Response 200 (text/html)

## Group membership Profile [/profile/membership-profile]

Profile definition for all group membership related resources.

### Link relations

* `groups`: It redirects to the URI of the groups where it's possible to add a new group.
* `group`: Lists the group involved in the membership retreived. The item is an instance of Group defined in profile [Group](resource/profile/group-profile).
* `group requests`: Lists all pending requests for the group whose membership is being retreived. The item is an instance of Membership Request defined in the profile [Membership request](resource/profile/request-profile).
* `group statuses`: Lists all statuses posted in the group whose membership is being retreived. The item is an instance of Status defined in profile [Status](resource/profile/status-profile).
* `profile picture` : Photo which is used to identify the group. The item is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).
* `user profile`: This action lists user profile of user involved in the membership. The item is an instance of type User Profile defined in the profile [User](resource/profile/user-profile).
* `user profile picture` : Photo which is used to identify the user involved in the membership. The item is an instance of type Media Item defined in the profile [Media item](resource/profile/media_item-profile).
* `user memberships` : All memberships involving the user who is involved in the membership. Each item is an instance of type Group Membership defined in this profile.
* `user membership` : Membership between the user and this group. The item is an instance of type Group Membership defined in this profile.

#### Data type Group Membership

* `id` (int): Identifier of the group
* `user_id` (int): Identifier for the user who is involved in the membership.
* `administrator` (int): Indicates whether the user is administrator or not for the group (0 = normal user, 1 = administrator).

### GET

Return the Group Membership profile in HTML format
+ Response 200 (text/html)

# Group User comments

## Comments list [/friendsNet/api/users/{user_id}/comments/]

A list of all the comments posted by the user. For more details, see section regarding a Comment entity.

+ Parameters
    + user_id: 4 (int) - The id of the user whose comments must be retrieved. 

### List comments [GET]

Get all the comments posted by the user.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/comments/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/4/profile/", "rel" : "author", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/comments/2/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "Comment id"},
                                {"name" : "status_id", "value" : 1, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 4, "prompt" : "User id"},
                                {"name" : "content", "value" : "What!!?", "prompt" : "Content"},
                                {"name" : "creation_time", "value" : 140, "prompt" : "Creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/1/", "rel" : "status", "prompt" : "Status commented"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/comments/10/",
                            "data" : [
                                {"name" : "id", "value" : 10, "prompt" : "Comment id"},
                                {"name" : "status_id", "value" : 5, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 4, "prompt" : "User id"},
                                {"name" : "content", "value" : "Gooooood.", "prompt" : "Content"},
                                {"name" : "creation_time", "value" : 189, "prompt" : "Creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/5/", "rel" : "status", "prompt" : "Status commented"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/comments/",
                    "error" : {
                        "code" : 404, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/comments/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }            
            
# Group User rates

## Rates list [/friendsNet/api/users/{user_id}/rates/]

A list of all the rates given by the user. For more details, see section regarding a Rate entity.

+ Parameters
    + user_id: 1 (int) - The id of the user whose rates must be retrieved. 

### List rates [GET]

Get all the rates given by the user.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/rates/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/1/profile/", "rel" : "author", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/rates/2/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 2, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"},
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/2/", "rel" : "status", "prompt" : "Status rated"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/rates/7/",
                            "data" : [
                                {"name" : "id", "value" : 7, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 5, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"},
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/5/", "rel" : "status", "prompt" : "Status rated"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/rates/14/",
                            "data" : [
                                {"name" : "id", "value" : 14, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 8, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"},
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/8/", "rel" : "status", "prompt" : "Status rated"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/rates/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/rates/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }
            
# Group User conversations

## Conversations list [/friendsNet/api/users/{user_id}/conversations/]

A list of all the conversations in which the user is involved. For more details, see section regarding a Conversation entity.

+ Parameters
    + user_id: 4 (int) - The id of the user whose conversations must be retrieved. 

### List conversations [GET]

Get all the conversations in which the user is involved.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/4/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/conversations/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Conversation id"},
                                {"name" : "user1_id", "value" : 1, "prompt" : "User_1 id"},
                                {"name" : "user2_id", "value" : 4, "prompt" : "User_2 id"},
                                {"name" : "time_last_message", "value" : 950, "prompt" : "Time last message"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user contacted profile", "prompt" : "User contacted profile"},
                                {"href" : "/friendsNet/api/conversations/1/messages/", "rel" : "conversation messages", "prompt" : "Conversation messages"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/conversations/3/",
                            "data" : [
                                {"name" : "id", "value" : 3, "prompt" : "Conversation id"},
                                {"name" : "user1_id", "value" : 4, "prompt" : "User_1 id"},
                                {"name" : "user2_id", "value" : 2, "prompt" : "User_2 id"},
                                {"name" : "time_last_message", "value" : 532, "prompt" : "Time last message"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "user contacted profile", "prompt" : "User contacted profile"},
                                {"href" : "/friendsNet/api/conversations/3/messages/", "rel" : "conversation messages", "prompt" : "Conversation messages"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "user2_id", "value" : "", "prompt" : "User_2 id", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }         
            
### Add conversation [POST]

Create a new conversation in which the user is involved.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/vnd.collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "user2_id", "value" : 4}
                    ]
                }
            }

+ Response 201

    Conversation created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 400, "title" : "Conversation in bad format.", "message" : "Conversation passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }            
            
+ Response 409 (application/vnd.collection+json)

    Already existing conversation between the two users speficied.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 409, "title" : "Conversation double.", "message" : "Conversation already present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group User credentials

## Credentials list [/friendsNet/api/users/{user_id}/credentials/]

Credentials(id, email, password and registration time) of the user.

+ Parameters
    + user_id: 1 (int) - The id of the user whose credentials must be retrieved. 

### List credentials [GET]

Get user's credentials.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/credentials/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/user/1/credentials/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "email", "value" : "email1@gmail.com", "prompt" : "User email"},
                                {"name" : "password", "value" : "12345678", "prompt" : "User password"},
                                {"name" : "registration_time", "value" : 1, "prompt" : "User registration time"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/credentials/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/credentials/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }       
            
### Delete user [DELETE]

Delete user from the platform.

+ Request
    
    + Headers
    
            Accept: application/vnd.collection+json
            
+ Response 204

    User successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/conversations/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
    
# Group User friendships

## Friendships list [/friendsNet/api/users/{user_id}/friendships/]

A list of all the friendships in which the user is involved. For more details, see section regarding a Friendship entity.

+ Parameters
    + user_id: 5 (int) - The id of the user whose friends must be retrieved. 

### List friendships [GET]

Get all the friendships in which the user is involved.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/5/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/friendships/6/",
                            "data" : [
                                {"name" : "id", "value" : 6, "prompt" : "Friendship id"},
                                {"name" : "user1_id", "value" : 5, "prompt" : "User_1 id"},
                                {"name" : "user2_id", "value" : 6, "prompt" : "User_2 id"},
                                {"name" : "friendship_status", "value" : 1, "prompt" : "Friendship status"},
                                {"name" : "friendship_start", "value" : 800, "prompt" : "Friendship start"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/6/profile/", "rel" : "friend", "prompt" : "Friend profile"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "user2_id", "value" : "", "prompt" : "User_2 id", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/friendships/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                
            
### Send friendship request [POST]

Send a new friendship request to another user.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/vnd.collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "user2_id", "value" : 6}
                    ]
                }
            }

+ Response 201

    Friendship request created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 400, "title" : "Friendship request in bad format.", "message" : "Friendship request passed in a bad format for the request. Please check documentation."
                    }
                }
            }
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }                        
            
+ Response 409 (application/vns.collection+json)

    Already existing friendship between the two users specified.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 409, "title" : "Friendship double.", "message" : "Friendship already present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/5/friendships/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }

# Group User memberships

## Group list [/friendsNet/api/users/{user_id}/groups/]

A list of all the memberships in which the user is involved. For more details, see section regarding a Group Membership entity.
Once member of a group, the user can visualize the statuses posted in that specific group.

+ Parameters
    + user_id: 1 (int) - The id of the user whose memberhsips must be retrieved. 

### List groups [GET]

Get all the memberships in which user is involved.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/1/groups/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "group_id", "value" : 1, "prompt" : "Group id"},
                                {"name" : "administrator", "value" : 1, "prompt" : "Membership type"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/groups/1/", "rel" : "group", "prompt" : "Group"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "group_id", "value" : "", "prompt" : "Group id", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/groups/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }              
            
### Add membership to a group [POST]

Add the user as member of a group. Membership between the user and the group must not exist already.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "group_id", "value" : 3}
                    ]
                }
            }

+ Response 201

    Group membership created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 400, "title" : "Membership in bad format.", "message" : "Membership passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 409 (application/vns.collection+json)

    Already existing membership between the two users specified.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 409, "title" : "Membership double.", "message" : "Membership already present in the system."
                    }
                }
            }

    
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }

# Group User membership

## Group membership [/friendsNet/api/users/{user_id}/groups/{group_id}/]

A specific membership relative to a user in a group.

+ Parameters
    + user_id: 1 (int) - The id of the user whose membership must be retrieved. 
    + group_id: 1 (int) - The id of the group for which the user is member in this membership.

### Get membership [GET]

Get membership information.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/1/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                        {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/1/groups/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "group_id", "value" : 1, "prompt" : "Group id"},
                                {"name" : "administrator", "value" : 1, "prompt" : "Membership type"},
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/groups/1/members/", "rel" : "group members", "prompt" : "Group"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                                {"name" : "administrator", "value" : "", "prompt" : "Membership type", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Membership with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 404, "title" : "Membership not found.", "message" : "Membership not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }    
            
###  Modify membership for a group [PATCH]

Modify type of membership (administrator/normal user).

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "administrator", "value" : 1}
                    ]
                }
            }

+ Response 200

    Group membership modified correctly.

    + Body
            
+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 400, "title" : "Membership in bad format.", "message" : "Membership passed in a bad format for the request. Please check documentation."
                    }
                }
            }            

+ Response 404 (application/vnd.collection+json)

    Membership with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 404, "title" : "Membership not found.", "message" : "Membership not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete membership [DELETE]

Delete user from a group.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Membership successfully deleted.

    + Body

+ Response 404 (application/vnd.collection+json)

    Membership with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1",
                    "error" : {
                        "code" : 404, "title" : "Membership not found.", "message" : "Membership not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/groups/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }
            
# Group User tags

## Tags list [/friendsNet/api/users/{user_id}/tags/]

A list of all the statuses in which the user has been tagged. For more details, see section regarding a Status entity.

+ Parameters
    + user_id: 4 (int) - The id of the user whose tags must be retrieved. 

### List tags [GET]

Get all the statuses in which the user has been tagged.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/tags/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/4/profile/", "rel" : "tag", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/statuses/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "Creator id"},
                                {"name" : "content", "value" : "Good morning!", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : 50, "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/1/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/1/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/1/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/1/media/", "rel" : "media list", "prompt" : "Status media items"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/tags/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/tags/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }    

# Group User profiles

## Profiles list [/friendsNet/api/users?{name,surname}/]

A list of all the users' profiles. For more details, see section regarding a User Profile entity.

+ Parameters
    + name: "User" (string) - The name, or part of it, of the user to search.
    + surname: "Prime" (string) - The surname, or part of it, of the user to search.

### List profiles [GET]

Get all the users' profiles in the system.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Request correctly served.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/1/profile/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Antonio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Antonino", "prompt" : "User surname"},
                                {"name" : "age", "value" : 20, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/1/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/1/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/1/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/1/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/1/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/1/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/1/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/1/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/1/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/2/profile/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Eugenio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Leonetti", "prompt" : "User surname"},
                                {"name" : "age", "value" : 25, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/2/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/2/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/2/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/2/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/2/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/2/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/2/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/2/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/2/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/3/profile/",
                            "data" : [
                                {"name" : "id", "value" : 3, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Mikko", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Yliniemi", "prompt" : "User surname"},
                                {"name" : "age", "value" : 28, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/3/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/3/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/3/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/3/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/3/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/3/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/3/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/3/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/3/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/4/profile/",
                            "data" : [
                                {"name" : "id", "value" : 4, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Stefany", "prompt" : "User first name"},
                                {"name" : "middle_name", "value" : "Katherine", "prompt" : "User middle name"},
                                {"name" : "surname", "value" : "Smith", "prompt" : "User surname"},
                                {"name" : "age", "value" : 15, "prompt" : "User age"},
                                {"name" : "gender", "value" : 1, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/4/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/4/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/4/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/4/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/4/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/4/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/4/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/4/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/4/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/5/profile/",
                            "data" : [
                                {"name" : "id", "value" : 5, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Mickael", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Red", "prompt" : "User surname"},
                                {"name" : "age", "value" : 17, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/5/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/5/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/5/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/5/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/5/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/5/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/5/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/5/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/5/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/6/profile/",
                            "data" : [
                                {"name" : "id", "value" : 6, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Trial", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "User", "prompt" : "User surname"}
                                {"name" : "age", "value" : 15, "prompt" : "User age"},
                                {"name" : "gender", "value" : 1, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/6/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/6/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/6/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/6/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/6/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/6/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/6/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/6/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/6/feed/", "rel" : "user feed", "prompt" : "User feed"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/7/profile/",
                            "data" : [
                                {"name" : "id", "value" : 7, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "User", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Trial", "prompt" : "User surname"},
                                {"name" : "age", "value" : 82, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/7/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                                {"href" : "/friendsNet/api/users/7/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                                {"href" : "/friendsNet/api/users/7/comments/", "rel" : "user comments", "prompt" : "User comments"},
                                {"href" : "/friendsNet/api/users/7/rates/", "rel" : "user rates", "prompt" : "User rates"},
                                {"href" : "/friendsNet/api/users/7/tags/", "rel" : "user tags", "prompt" : "User tags"},
                                {"href" : "/friendsNet/api/users/7/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                                {"href" : "/friendsNet/api/users/7/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                                {"href" : "/friendsNet/api/users/7/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                                {"href" : "/friendsNet/api/users/7/feed/", "rel" : "user feed", "prompt" : "User feed"},
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "email", "value" : "", "prompt" : "User email", "required" : "true"},
                            {"name" : "password", "value" : "", "prompt" : "User password", "required" : "true"},
                            {"name" : "firstName", "value" : "", "prompt" : "User first name", "required" : "true"},
                            {"name" : "middle_name", "value" : "", "prompt" : "User middle name", "required" : "false"},
                            {"name" : "surname", "value" : "", "prompt" : "User surname", "required" : "true"},
                            {"name" : "prof_picture_id", "value" : "", "prompt" : "Profile picture id", "required" : "false"},
                            {"name" : "age", "value" : "", "prompt" : "User age", "required" : "true"},
                            {"name" : "gender", "value" : "", "prompt" : "User gender", "required" : "true"}
                        ]
                    },
                    "queries" : [
                        {
                            "href" : "/friendsNet/api/users/",
                            "rel" : "search",
                            "prompt" : "Search user",
                            "data" : [
                                {"name" : "name", "value" : ""},
                                {"name" : "surname", "value" : ""}
                            ]
                        }
                    ]
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
            
### Add user [POST]

Create a new user. Email for the user has to be unique and password at least 8 characters long.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                        "data" : [
                            {"name" : "email", "value" : "emailNew"},
                            {"name" : "password", "value" : "123131kmklmd"},
                            {"name" : "firstName", "value" : "Me"},
                            {"name" : "middle_name", "value" : "Secondme"},
                            {"name" : "surname", "value" : "Meagain"},
                            {"name" : "age", "value" : 21, "prompt" : "User age", "required" : "true"},
                            {"name" : "gender", "value" : "", "prompt" : "User gender", "required" : "true"}
                        ]
                    }
            }

+ Response 201

    Profile created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 400, "title" : "User in bad format.", "message" : "User passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 409 (application/vns.collection+json)

    Email already associated to an user in the system.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 409, "title" : "User email double.", "message" : "User email already present in the system."
                    }
                }
            }            
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }    
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }

# Group User profile

## Group profile [/friendsNet/api/users/{user_id}/profile/]

A specific profile for a user.

+ Parameters
    + user_id: 1 (int) - The id of the user whose profile must be retrieved. 

### Get profile [GET]

Get all user's profile information.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "links" : [
                            {"href" : "/friendsNet/api/users/1/credentials/", "rel" : "user credentials", "prompt" : "User credentials"},
                            {"href" : "/friendsNet/api/users/1/groups/", "rel" : "user memberships", "prompt" : "User memberships"},
                            {"href" : "/friendsNet/api/users/1/comments/", "rel" : "user comments", "prompt" : "User comments"},
                            {"href" : "/friendsNet/api/users/1/rates/", "rel" : "user rates", "prompt" : "User rates"},
                            {"href" : "/friendsNet/api/users/1/tags/", "rel" : "user tags", "prompt" : "User tags"},
                            {"href" : "/friendsNet/api/users/1/statuses/", "rel" : "user statuses", "prompt" : "User statuses"},
                            {"href" : "/friendsNet/api/users/1/friendships/", "rel" : "user friendships", "prompt" : "User friendships"},
                            {"href" : "/friendsNet/api/users/1/conversations/", "rel" : "user conversations", "prompt" : "User conversations"},
                            {"href" : "/friendsNet/api/users/1/feed/", "rel" : "user feed", "prompt" : "User feed"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/1/profile/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Antonio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Antonino", "prompt" : "User surname"},
                                {"name" : "age", "value" : 20, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "password", "value" : "", "prompt" : "User password", "required" : "false"},
                            {"name" : "firstName", "value" : "", "prompt" : "User first name", "required" : "false"},
                            {"name" : "middle_name", "value" : "", "prompt" : "User middle name", "required" : "false"},
                            {"name" : "surname", "value" : "", "prompt" : "User surname", "required" : "false"},
                            {"name" : "prof_picture_id", "value" : "", "prompt" : "Profile picture id", "required" : "false"},
                            {"name" : "age", "value" : "", "prompt" : "User age", "required" : "false"},
                            {"name" : "gender", "value" : "", "prompt" : "User gender", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }    
            
### Modify profile for a user [PATCH]

Modify profile elements for a user.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                        "data" : [
                            {"name" : "password", "value" : ""},
                            {"name" : "firstName", "value" : ""},
                            {"name" : "middle_name", "value" : ""},
                            {"name" : "surname", "value" : ""},
                            {"name" : "prof_picture_id", "value" : ""},
                            {"name" : "age", "value" : ""},
                            {"name" : "gender", "value" : ""}
                        ]
                    }
            }

+ Response 200

    Profile modified correctly.

    + Body
    
+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/999/profile/",
                    "error" : {
                        "code" : 400, "title" : "User in bad format.", "message" : "User passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group User statuses

## Statuses list [/friendsNet/api/users/{user_id}/statuses/]

A list of all the statuses posted by the user.

+ Parameters
    + user_id: 2 (int) - The id of the user whose statuses must be retrieved. 

### List statuses [GET]

Get all the statuses posted by the user.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/2/profile/", "rel" : "author", "prompt" : "Author"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/statuses/3/",
                            "data" : [
                                {"name" : "id", "value" : 3, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 2, "prompt" : "Creator id"},
                                {"name" : "content", "value" : "I'm here!!!!", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : 90, "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/3/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/3/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/3/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/3/media/", "rel" : "media list", "prompt" : "Status media items"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "content", "value" : "", "prompt" : "Status content", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }              
            
### Add status [POST]

Create a new statuses for which the user is the creator.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "content", "value" : ""}
                    ]
                }
            }

+ Response 201

    Status created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "error" : {
                        "code" : 400, "title" : "Status in bad format.", "message" : "Status passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/999/statuses/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }            
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/2/statuses/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }

# Group User feed

## Feed list [/friendsNet/api/users/{user_id}/feed{?limit}/]

A list of all the statuses posted by the user's friends not in a group. For more details, see section regarding a Status entity.

+ Parameters
    + user_id: 3 (int) - The id of the user whose friends' statuses must be retrieved. 
    + limit: 1 (int) - The maximum number of friends's status to get. If not specified, default value is 100.

### List feed statuses [GET]

Get all the statuses posted by the user's friends.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/3/feed/",
                    "links" : [
                        {"href" : "/friendsNet/api/users/3/profile/", "rel" : "user profile", "prompt" : "User profile"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/statuses/8/",
                            "data" : [
                                {"name" : "id", "value" : "8", "prompt" : "Status id"},
                                {"name" : "user_id", "value" : "4", "prompt" : "Creator id"},
                                {"name" : "content", "value" : "Sea, peace, sun, repeat.", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : "230", "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/8/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/8/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/8/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/8/media/", "rel" : "media list", "prompt" : "Status media items"},
                                {"href" : "/friendsNet/api/users/4/profile/", "rel" : "author", "prompt" : "Status creator profile"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/statuses/7/",
                            "data" : [
                                {"name" : "id", "value" : "7", "prompt" : "Status id"},
                                {"name" : "user_id", "value" : "4", "prompt" : "Creator id"},
                                {"name" : "content", "value" : "Robotssss", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : "200", "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/7/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/7/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/7/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/7/media/", "rel" : "media list", "prompt" : "Status media items"},
                                {"href" : "/friendsNet/api/users/4/profile/", "rel" : "author", "prompt" : "Status creator profile"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/statuses/3/",
                            "data" : [
                                {"name" : "id", "value" : "3", "prompt" : "Status id"},
                                {"name" : "user_id", "value" : "2", "prompt" : "Creator id"},
                                {"name" : "content", "value" : "I'm here!!!!", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : "90", "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/3/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/3/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/3/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/3/media/", "rel" : "media list", "prompt" : "Status media items"},
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "author", "prompt" : "Status creator profile"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/statuses/2/",
                            "data" : [
                                {"name" : "id", "value" : "2", "prompt" : "Status id"},
                                {"name" : "user_id", "value" : "1", "prompt" : "Creator id"},
                                {"name" : "content", "value" : "Good afternoon!", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : "80", "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/2/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/2/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/2/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/2/media/", "rel" : "media list", "prompt" : "Status media items"},
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "author", "prompt" : "Status creator profile"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/statuses/1/",
                            "data" : [
                                {"name" : "id", "value" : "1", "prompt" : "Status id"},
                                {"name" : "user_id", "value" : "1", "prompt" : "Creator id"},
                                {"name" : "content", "value" : "Good morning!", "prompt" : "Status content"},
                                {"name" : "creation_time", "value" : "50", "prompt" : "Status creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/1/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                {"href" : "/friendsNet/api/statuses/1/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                {"href" : "/friendsNet/api/statuses/1/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                {"href" : "/friendsNet/api/statuses/1/media/", "rel" : "media list", "prompt" : "Status media items"},
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "author", "prompt" : "Status creator profile"}
                            ]
                        }
                    ],
                    "queries" : [
                        {
                            "href" : "/friendsNet/api/users/3/feed/",
                            "rel" : "search",
                            "prompt" : "Search",
                            "data" : [
                                {"name" : "limit", "value" : ""}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    User with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/999/feed/",
                    "error" : {
                        "code" : 404, "title" : "User not found.", "message" : "User not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/4/feed/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }        
            
# Group Comment

## Comment [/friendsNet/api/comments/{comment_id}/]

List info for a specific comment.

+ Parameters
    + comment_id: 1 (int) - The id of the comment. 

### List comment info [GET]

List info for specific comment.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Comment with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/1/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/comments/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Comment id"},
                                {"name" : "status_id", "value" : 1, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 2, "prompt" : "User id"},
                                {"name" : "content", "value" : "Ahahahaah", "prompt" : "Content"},
                                {"name" : "creation_time", "value" : 60, "prompt" : "Creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/1/", "rel" : "status commented", "prompt" : "Status commented"},
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "author", "prompt" : "Author"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "content", "value" : "", "prompt" : "Comment content", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Comment with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/999/",
                    "error" : {
                        "code" : 404, "title" : "Comment not found.", "message" : "Comment not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }              
            
### Modify comment [PATCH]

Modify comment data.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "content", "value" : "Jkasd"}
                    ]
                }
            }

+ Response 200

    Comment modified correctly.

    + Body
            
+ Response 404 (application/vnd.collection+json)

    Comment with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/999/",
                    "error" : {
                        "code" : 404, "title" : "Comment not found.", "message" : "Comment not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete comment [DELETE]

Delete a comment.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Comment successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Comment with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/comments/999/",
                    "error" : {
                        "code" : 404, "title" : "Comment not found.", "message" : "Comment not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
            
# Group Rate

List info for a specific rate.

## Rate [/friendsNet/api/rates/{rate_id}/]

+ Parameters
    + rate_id: 1 (int) - The id of the rate 

### List rate info [GET]

List info for a specific rate.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Rate with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/rates/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 1, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 2, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Value"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/1/", "rel" : "status rated", "prompt" : "Status rated"},
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "author", "prompt" : "Author"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "rate", "value" : "", "prompt" : "Rate value", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Rate with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",               
                    "error" : {
                        "code" : 404, "title" : "Rate not found.", "message" : "Rate not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                
            
### Modify rate [PATCH]

Modify rate

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "rate", "value" : 3}
                    ]
                }
            }

+ Response 200

    Rate modified correctly.

    + Body

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 400, "title" : "Rate in bad format.", "message" : "Rate passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Rate with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 404, "title" : "Rate not found.", "message" : "Rate not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
            
### Delete rate [DELETE]

Delete a rate.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Rate successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Rate with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/rates/1/",
                    "error" : {
                        "code" : 404, "title" : "Rate not found.", "message" : "Rate not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
 
# Group Status

List info for a specific status.

## Status [/friendsNet/api/statuses/{status_id}/]

+ Parameters
    + status_id: 1 (int) - The id of the status 

### List status info [GET]

List info for a specific status.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Status with specified id existing.

    + Body
    
                {
                    "collection" : {
                        "version" : "1.0",
                        "href" : "/friendsNet/api/statuses/1/",
                        "items" : [
                            {
                                "href" : "/friendsNet/api/statuses/1/",
                                "data" : [
                                    {"name" : "id", "value" : 1, "prompt" : "Status id"},
                                    {"name" : "user_id", "value" : 1, "prompt" : "Creator id"},
                                    {"name" : "content", "value" : "Good morning!", "prompt" : "Status content"},
                                    {"name" : "creation_time", "value" : 50, "prompt" : "Status creation time"}
                                ],
                                "links" : [
                                    {"href" : "/friendsNet/api/statuses/1/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                                    {"href" : "/friendsNet/api/statuses/1/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                                    {"href" : "/friendsNet/api/statuses/1/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                                    {"href" : "/friendsNet/api/statuses/1/media/", "rel" : "status media list", "prompt" : "Status media items"},
                                    {"href" : "/friendsNet/api/users/1/profile/", "rel" : "author", "prompt" : "Status creator" }
                                ]
                            }
                        ],
                        "template" : {
                            "data" : [
                                {"name" : "content", "value" : "", "prompt" : "Status content", "required" : "false"}
                            ]
                        }
                    }
                }

+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/",               
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }          
            
### Modify status [PATCH]

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "content", "value" : ""}
                    ]
                }
            }
            
+ Response 200

    Status modified correctly.

    + Body
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete status [DELETE]

Delete a status.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Status successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            } 
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
 
# Group Status comments

All comments posted for a status. For more details, see section regarding a Comment entity.

## Comments list [/friendsNet/api/statuses/{status_id}/comments/]

A list of all the comments related to a status. 

+ Parameters
    + status_id: 4 (int) - The id of the status whose comments must be retrieved. 

### List comments [GET]

Get all the comments posted to the status.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Status with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "links" : [
                        {"href" : "/friendsNet/api/statuses/4/", "rel" : "status", "prompt" : "Status commented"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/comments/6/",
                            "data" : [
                                {"name" : "id", "value" : 6, "prompt" : "Comment id"},
                                {"name" : "status_id", "value" : 4, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "User id"},
                                {"name" : "content", "value" : "Hello :D !", "prompt" : "Comment content"},
                                {"name" : "creation_time", "value" : 120, "prompt" : "Comment creation time"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "author", "prompt" : "User profile"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "author", "value" : "", "prompt" : "User id", "required" : "true"},
                            {"name" : "content", "value" : "", "prompt" : "Content", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }

+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }    

### Add comment [POST]

Post a new comment to a specific status.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "author", "value" : ""},
                        {"name" : "content", "value" : ""}
                    ]
                }
            ]

+ Response 201

    Comment created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "error" : {
                        "code" : 400, "title" : "Comment in bad format.", "message" : "Comment passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/comments/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }            
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/comments/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Status rates

All rates given to a status. For more details, see section regarding a Rate entity.

## Rates list [/friendsNet/api/statuses/{status_id}/rates/]

List of all the rates given to a specific status.

+ Parameters
    + status_id: 4 (int) - The id of the status whose rates must be retrieved. 

### List rates [GET]

Get all rates for a specific status.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body 
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "links" : [
                        {"href" : "/friendsNet/api/statuses/4/", "rel" : "status", "prompt" : "Status rated"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/rates/6/",
                            "data" : [
                                {"name" : "id", "value" : 6, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 4, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 2, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "author", "prompt" : "User profile"}
                            ]
                        },                    
                        {
                            "href" : "/friendsNet/api/rates/5/",
                            "data" : [
                                {"name" : "id", "value" : 5, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 4, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 3, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/3/profile/", "rel" : "author", "prompt" : "User profile"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/rates/4/",
                            "data" : [
                                {"name" : "id", "value" : 4, "prompt" : "Rate id"},
                                {"name" : "status_id", "value" : 4, "prompt" : "Status id"},
                                {"name" : "user_id", "value" : 4, "prompt" : "User id"},
                                {"name" : "rate", "value" : 4, "prompt" : "Rate value"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/4/profile/", "rel" : "author", "prompt" : "User profile"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "author", "value" : "", "prompt" : "User id", "required" : "true"},
                            {"name" : "rate", "value" : "", "prompt" : "Rate", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/rates/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }        

### Add rate [POST]

Add a new rate to a specific status.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "author", "value" : ""},
                        {"name" : "rate", "value" : ""}
                    ]
                }
            }

+ Response 201

    Rate created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "error" : {
                        "code" : 400, "title" : "Rate in bad format.", "message" : "Rate passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/rates/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }            
            
+ Response 409 (application/vns.collection+json)

    User already rated the status specified.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "error" : {
                        "code" : 409, "title" : "Rate for this status double.", "message" : "Rate for this status already present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/rates/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Status tags

All users tagged into a status. For more details, see section regarding a User Profile entity.

## Tags list [/friendsNet/api/statuses/{status_id}/tags/]

List of all users tagged in the status.

+ Parameters
    + status_id: 4 (int) - The id of the status whose tags must be retrieved. 

### List tags [GET]

Get all users tagged in a specific status.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    User with specified id existing.

    + Body            
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/",
                    "links" : [
                        {"href" : "/friendsNet/api/statuses/4/", "rel" : "status", "prompt" : "Status"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/1/profile/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Antonio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Antonino", "prompt" : "User surname"},
                                {"name" : "age", "value" : 20, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/4/tags/1/", "rel" : "status tag", "prompt" : "Status tag"},
                                {"href" : "/friendsNet/api/users/1/tags/", "rel" : "user tags", "prompt" : "User tags"}
                            ]
                        },
                        {
                            "href" : "/friendsNet/api/users/2/profile/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Eugenio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Leonetti", "prompt" : "User surname"},
                                {"name" : "age", "value" : 25, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/statuses/4/tags/2/", "rel" : "status tag", "prompt" : "Status tag"},
                                {"href" : "/friendsNet/api/users/2/tags/", "rel" : "user tags", "prompt" : "User tags"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "user_id", "value" : "", "prompt" : "User tagged", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/tags/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }          

### Add tag [POST]

Add a new tag to a specific status.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {               
                "template" : {
                    "data" : [
                        {"name" : "user_id", "value" : ""}
                    ]
                }
            }

+ Response 201

    Tag created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/",
                    "error" : {
                        "code" : 400, "title" : "Tag in bad format.", "message" : "Tag passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/tags/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }            
            
+ Response 409 (application/vns.collection+json)

    User already tagged in the status specified.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/",
                    "error" : {
                        "code" : 409, "title" : "Tag for this status double.", "message" : "Tag for this status already present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Status tag

Tag for a user into a status. For more details, see section regarding a User Profile entity.

## Tag [/friendsNet/api/statuses/{status_id}/tags/{user_id}/]

Tag for a specific user in a specific status.

+ Parameters
    + status_id: 4 (int) - The id of the status whose tag must be retrieved.
    + user_id: 2 (int) - The id of the user tagged.

### Tag [GET]

Get details for a status tag.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Status and User with specified id existing.

    + Body 
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/2/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/2/profile/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "User id"},
                                {"name" : "firstName", "value" : "Eugenio", "prompt" : "User first name"},
                                {"name" : "surname", "value" : "Leonetti", "prompt" : "User surname"},
                                {"name" : "age", "value" : 25, "prompt" : "User age"},
                                {"name" : "gender", "value" : 0, "prompt" : "User gender"}
                            ]
                        }
                    ],                    
                    "links" : [
                        {"href" : "/friendsNet/api/statuses/4/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                        {"href" : "/friendsNet/api/statuses/4/", "rel" : "status tagged", "prompt" : "Status tagged"},
                        {"href" : "/friendsNet/api/users/2/profile/", "rel" : "tag", "prompt" : "User tagged"}
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Tag with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/tags/2/",
                    "error" : {
                        "code" : 404, "title" : "Tag not found.", "message" : "Tag not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/tags/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }             

### Delete tag [DELETE]

Delete a tagged user from a specific status

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Tag successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Tag with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/tags/1/",
                    "error" : {
                        "code" : 404, "title" : "Tag not found.", "message" : "Tag not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
            
# Group Status media

Media items attached to a status. For more details, see section regarding a Media Item entity.

## Status media list [/friendsNet/api/statuses/{status_id}/media/]

A list of all the media related to the status.

+ Parameters
    + status_id: 4 (int) - The id of the status whose media must be retrieved. 

### List media [GET]

Get all the media attached to the status.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Status with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/media/,
                    "links" : [
                        {"href" : "/friendsNet/api/statuses/1/", "rel" : "status", "prompt" : "Status"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/media/1/",
                            "data" : [
                                {"name" : "id", "value" : "1", "prompt" : "Media item id"},
                                {"name" : "media_item_type", "value" : "0", "prompt" : "Media item type"},
                                {"name" : "url", "value" : "http://url1.com", "prompt" : "Media item URL"},
                                {"name" : "description", "value" : "Flowers are wonderful!", "prompt" : "Media item description"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                                ---BOUNDARY
                                Content-Disposition: form-data; name=""; filename=""
                                Content-Type: image/jpeg
                                Content-Transfer-Encoding: base64

                                RAW DATA    
                                ---BOUNDARY
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/999/media/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/media/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                

### Add media [POST]

Attach a new media to a specific status.

+ Request (multipart/form-data; boundary=---BOUNDARY)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            ---BOUNDARY
            Content-Disposition: form-data; name=""; filename=""
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64

            RAW DATA
            ---BOUNDARY

+ Response 201

    Media attached correctly.

    + Headers

            Location: URL of the new created resource.
            

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/media/
                    "error" : {
                        "code" : 400, "title" : "Media item in bad format.", "message" : " Media item passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Status with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/",
                    "error" : {
                        "code" : 404, "title" : "Status not found.", "message" : "Status not present in the system."
                    }
                }
            }             
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/media/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/1/media/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
            
# Group Friendship

Friendship (pending or accepted) between two users.

## Group friendship [/friendsNet/api/friendships/{friendship_id}/]

Friendship between two users.

+ Parameters
    + friendship_id: 1 (int) - The id of the friendship thats info is going to be retrieved. 

### List friendship info [GET]

List info for specific friendship.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Friendship with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/friendships/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Friendship id"},
                                {"name" : "user1_id", "value" : 1, "prompt" : "User_1 id"},
                                {"name" : "user2_id", "value" : 2, "prompt" : "User_2 id"},
                                {"name" : "friendship_status", "value" : 1, "prompt" : "Friendship status"},
                                {"name" : "friendship_start", "value" : 100, "prompt" : "Friendship start"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User1 profile"},
                                {"href" : "/friendsNet/api/users/2/profile/", "rel" : "friend", "prompt" : "User2 profile"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "friendship_status", "value" : "", "prompt" : "Friendship status", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Friendship with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 404, "title" : "Friendship not found.", "message" : "Friendship not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/friendships/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                
            
### Modify friendship [PATCH]

Modify friendship data.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "friendship_status", "value" : 1}
                    ]
                }
            }

+ Response 200

    Friendship data modified correctly.

    + Body

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 400, "title" : "Friendship in bad format.", "message" : "Friendship passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Friendship with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/999/",
                    "error" : {
                        "code" : 404, "title" : "Friendship not found.", "message" : "Friendship not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete friendship [DELETE]

Delete a friendship.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Friendship successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Friendship with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 404, "title" : "Friendship not found.", "message" : "Friendship not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/friendships/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
            
# Group Media list

Media items onto the platform. For more details, see section regarding a Media Item entity.

## List media items [/friendsNet/api/media/]

List of media items.

### Add media item [POST]

Add a new media item.

+ Request (multipart/form-data; boundary=---BOUNDARY)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            ---BOUNDARY
            Content-Disposition: form-data; name=""; filename=""
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64

            RAW DATA
            ---BOUNDARY

+ Response 201

    Media item created correctly.

    + Headers

            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/",
                    "error" : {
                        "code" : 400, "title" : "Media item in bad format.", "message" : "Media item passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Media Item

Media item (photo or video).

## Media [/friendsNet/api/media/{media_id}/]

List info for a specific media item.

+ Parameters
    + media_id: 1 (int) - The id of the media thats info is going to be retrieved. 

### List media info [GET]

List info for specific media item.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Media with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "links" : [
                        {"href" : "/friendsNet/api/media/", "rel" : "media list", "prompt": "Media list"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/media/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Media item id"},
                                {"name" : "media_item_type", "value" : 0, "prompt" : "Media item type"},
                                {"name" : "url", "value" : "http://url1.com", "prompt" : "Media item URL"},
                                {"name" : "description", "value" : "Flowers are wonderful!", "prompt" : "Media item description"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "description", "value" : "", "prompt" : "Media item description", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Media item with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/999/",
                    "error" : {
                        "code" : 404, "title" : "Media item not found.", "message" : "Media item not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }             
            
### Modify media item [PATCH]

Modify media item data.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "description", "value" : "New description!!"}
                    ]
                }
            }

+ Response 200

    Media item data modified correctly.

    + Body

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 400, "title" : "Media item in bad format.", "message" : "Media item passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Media item with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 404, "title" : "Media item not found.", "message" : "Media item not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete media item [DELETE]

Delete a media item.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Media item successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Media item with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/media/1/",
                    "error" : {
                        "code" : 404, "title" : "Media item not found.", "message" : "Media item not present in the system."
                    }
                }
            }
            
# Group Group

Group for which different users are members.

## Group [/friendsNet/api/groups/{group_id}/]

+ Parameters
    + group_id: 3 (int) - The id of the group. 

### List group info [GET]

Lists info for specific group.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "links" : [
                        {"href" : "/friendsNet/api/groups/", "rel" : "groups", "prompt" : "Groups"},
                        {"href" : "/friendsNet/api/groups/3/statuses/", "rel" : "group statuses", "prompt" : "Group statuses"},
                        {"href" : "/friendsNet/api/groups/3/members/", "rel" : "group members", "prompt" : "Group members"},
                        {"href" : "/friendsNet/api/groups/3/requests/", "rel" : "group requests", "prompt" : "Group requests"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/groups/3/",
                            "data" : [
                                {"name" : "id", "value" : 3, "prompt" : "Group id"}, 
                                {"name" : "name", "value" : "Group3", "prompt" : "Group name"},
                                {"name" : "privacy_level", "value" : 2, "prompt" : "Privacy level"},
                                {"name" : "description", "value" : "Opennn", "prompt" : "Description"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "name", "value" : "", "prompt" : "Group name", "required" : "false"},
                            {"name" : "privacy_level", "value" : "", "prompt" : "Privacy_level", "required" : "false"},
                            {"name" : "description", "value" : "", "prompt" : "Description", "required" : "false"},
                            {"name" : "prof_picture_id", "value" : "", "prompt" : "Prof picture id", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/4/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                
            
### Modify group [PATCH]

Modify group data.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "name", "value" : ""},
                        {"name" : "privacy_level", "value" : ""},
                        {"name" : "description", "value" : ""},
                        {"name" : "prof_picture_id", "value" : ""}
                    ]
                }
            }

+ Response 200

    Group data modified correctly.

    + Body

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 400, "title" : "Group in bad format.", "message" : "Group passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
### Delete group [DELETE]

Delete a group.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Group successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/3/",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            
            
# Group Group members

Members for a group. For more details, see section regarding a Group Membership entity.

## Group members list [/friendsNet/api/groups/{group_id}/members/]

A list of all members of a group.

+ Parameters
    + group_id: 2 (int) - The id of the group.

### List group members [GET]

Get all the members of the group.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/members/",
                    "links" : [
                        {"href" : "/friendsNet/api/groups/", "rel" : "groups","prompt" : "Groups"},
                        {"href" : "/friendsNet/api/groups/2/", "rel" : "group", "prompt" : "Group"},
                        {"href" : "/friendsNet/api/groups/2/requests/", "group requests" : "group requests", "prompt" : "Group requests"},
                        {"href" : "/friendsNet/api/groups/2/statuses/", "rel" : "group statuses", "prompt" : "Group statuses"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/users/3/groups/2/",
                            "data" : [
                                {"name" : "id", "value" : 3, "prompt" : "User id"},
                                {"name" : "group_id", "value" : 2, "prompt" : "Group id"},
                                {"name" : "administrator", "value" : 1, "prompt" : "Membership type"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/members/",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/4/members/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                

# Group Group request

Pending membership request for a group by a user.

## Group request [/friendsNet/api/groups/{group_id}/requests/{user_id}/]

List data of specific group request.

+ Parameters
    + group_id: 2 (int) - The id of the group. 
    + user_id: 1 (int) - The id of the user. 

### List group request [GET]

Get specific group request.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group request with specified ids existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "links" : [
                        {"href" : "/friendsNet/api/groups/", "rel" : "groups", "prompt" : "Groups"},
                        {"href" : "/friendsNet/api/groups/2/", "rel" : "group", "prompt" : "Group"},
                        {"href" : "/friendsNet/api/groups/2/members/", "rel" : "group members", "prompt" : "Group members"},
                        {"href" : "/friendsNet/api/groups/2/statuses/", "rel" : "group statuses", "prompt" : "Group statuses"},
                        {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile"},
                        {"href" : "/friendsNet/api/users/1/groups/", "rel" : "user memberships", "prompt" : "User memberships"}
                    ],
                    "items" : [
                        {
                            "href" : "/friendsNet/api/groups/2/requests/1/",
                            "data" : [
                                {"name" : "id", "value" : 2, "prompt" : "Group id"},
                                {"name" : "user_id", "value" : 1, "prompt" : "User id"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "status", "value" : "", "prompt" : "Request status", "required" : "false"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Request with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "error" : {
                        "code" : 404, "title" : "Request not found.", "message" : "Request not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/4/requests/1/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                
            
### Modify group request [PATCH]

Modify group request data. Value 0 means deleting the request, value 1 means accepting the request.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "status", "value" : 1}
                    ]
                }
            }

+ Response 201

    Group request modified correctly.

    + Headers

            Location: URL of the new created resource.
    
+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "error" : {
                        "code" : 400, "title" : "Group request in bad format.", "message" : "Group request passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Request with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "error" : {
                        "code" : 404, "title" : "Request not found.", "message" : "Request not present in the system."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/1/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }

# Group Group requests

All pending requests by users for a group. For more details, see section regarding a Group Request entity.

## Group requests list [/friendsNet/api/groups/{group_id}/requests/]

List of all requests for a group.

+ Parameters
    + group_id: 2 (int) - The id of the group. 

### List requests [GET]

Get all memberships requests for a group.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group with specified id existing.

    + Body
    
            {
            "collection" : {
                "version" : "1.0",
                "href" : "/friendsNet/api/groups/2/requests/",
                "links" : [
                    {"href" : "/friendsNet/api/groups/", "rel" : "groups", "prompt" : "Groups"},
                    {"href" : "/friendsNet/api/groups/2/", "rel" : "group", "prompt" : "Group"},
                    {"href" : "/friendsNet/api/groups/2/members/", "group members" : "group members", "prompt" : "Group members"},
                    {"href" : "/friendsNet/api/groups/2/statuses/", "rel" : "group statuses", "prompt" : "Group statuses"}
                ],
                "items" : [
                    {
                        "href" : "/friendsNet/api/groups/2/requests/1/",
                        "data" : [
                            {"name" : "id", "value" : 2, "prompt" : "Group id"},
                            {"name" : "user_id", "value" : 1, "prompt" : "User id"}
                        ],
                        "links" : [
                            {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile",},
                            {"href" : "/friendsNet/api/users/1/groups/", "rel" : "user memberships", "prompt" : "User memberships"}
                        ]
                    },
                    {
                        "href" : "/friendsNet/api/groups/2/requests/4/",
                        "data" : [
                            {"name" : "id", "value" : 2, "prompt" : "Group id"},
                            {"name" : "user_id", "value" : 4, "prompt" : "User id"}
                        ],
                        "links" : [
                            {"href" : "/friendsNet/api/users/4/profile/", "rel" : "user profile", "prompt" : "User profile"},
                            {"href" : "/friendsNet/api/users/4/groups/", "rel" : "user memberships", "prompt" : "User memberships"}
                        ]
                    }
                ],
                "template" : {
                    "data" : [
                        {"name" : "user_id", "value" : "", "prompt" : "User requesting id", "required" : "true"}
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/4/requests/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }                

### Add group request [POST]

Create a new membership request for a group.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "user_id", "value" : 5}
                    ]
                }
            }

+ Response 201

    Group request created correctly.

    + Headers

            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/",
                    "error" : {
                        "code" : 400, "title" : "Group request in bad format.", "message" : "Group request passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/requests/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Group statuses

All statuses posted by members of a group within the group. For more details, see section regarding a Status entity.

## Group statuses list [/friendsNet/api/groups/{group_id}/statuses/]

List all statuses for a group.

+ Parameters
    + group_id: 2 (int) - The id of the group. 

### List statuses [GET]

Get all statuses for a group.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group with specified id existing.

    + Body
    
            {
            "collection" : {
                "version" : "1.0",
                "href" : "/friendsNet/api/groups/2/statuses/",
                "links" : [
                    {"href" : "/friendsNet/api/groups/", "rel" : "groups", "prompt" : "Groups"},
                    {"href" : "/friendsNet/api/groups/2/", "rel" : "group", "prompt" : "Group"},
                    {"href" : "/friendsNet/api/groups/2/members/", "group members" : "group members", "prompt" : "Group members"},
                    {"href" : "/friendsNet/api/groups/2/requests/", "rel" : "group requests", "prompt" : "Group requests"}
                ],
                "items" : [
                    {
                        "href" : "/friendsNet/api/statuses/9/",
                        "data" : [
                            {"name" : "id", "value" : 9, "prompt" : "Status id"},
                            {"name" : "user_id", "value" : 3, "prompt" : "Creator id"},
                            {"name" : "content", "value" : "Hello everyone :)", "prompt" : "Status content"},
                            {"name" : "creation_time", "value" : 1931, "prompt" : "Status creation time"}
                        ],
                        "links" : [
                            {"href" : "/friendsNet/api/statuses/9/comments/", "rel" : "status comments", "prompt" : "Status comments"},
                            {"href" : "/friendsNet/api/statuses/9/rates/", "rel" : "status rates", "prompt" : "Status rates"},
                            {"href" : "/friendsNet/api/statuses/9/tags/", "rel" : "status tags", "prompt" : "Status tags"},
                            {"href" : "/friendsNet/api/statuses/9/media/", "rel" : "status media list", "prompt" : "Status media items"}
                        ]
                    }
                ],
                "template" : {
                    "data" : [
                        {"name" : "author", "value" : "", "prompt" : "Status creator id", "required" : "true"},
                        {"name" : "content", "value" : "", "prompt" : "Status content", "required" : "true"}
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/statuses",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/statuses/4/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }
            
### Add status [POST]

Create a new status in the group in which the user specified is the author.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "author", "value" : 3},
                        {"name" : "content", "value" : "Hei"}
                    ]
                }
            }

+ Response 201

    Status created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/999/statuses/",
                    "error" : {
                        "code" : 400, "title" : "Status in bad format.", "message" : "Status passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Group with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/statuses",
                    "error" : {
                        "code" : 404, "title" : "Group not found.", "message" : "Group not present in the system."
                    }
                }
            }
            
+ Response 412 (application/vnd.collection+json)

    User not member of the group.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/statuses/",
                    "error" : {
                        "code" : 412, "title" : "User not member of group.", "message" : "User doesn't belong to the group so he cannot post any statuses."
                    }
                }
            }             
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/statuses/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/2/statuses/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Groups

All groups onto the platform. For more details, see section regarding a Group entity.

## Groups list [/friendsNet/api/groups/]

List all groups.
    
### Add group [POST]

Create a new group.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "name", "value" : "New group"},
                        {"name" : "privacy_level", "value" : 1},
                        {"name" : "description", "value" : "Group just because."}
                    ]
                }
            }

+ Response 201

    Group created correctly.

    + Headers
                
            Location: URL of the new created resource.

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/",
                    "error" : {
                        "code" : 400, "title" : "Group in bad format.", "message" : "Group passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/groups/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }
            
# Group Conversation

Conversation between two users.

## Conversations list [/friendsNet/api/friendships/{conversation_id}/]

Details for a specific conversation.

+ Parameters
    + conversation_id: 1 (int) - The id of the conversation. 

### List conversation info [GET]

List details for a conversation.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Group with specified id existing.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/",
                    "items" : [
                        {
                            "href" : "/friendsNet/api/conversations/1/",
                            "data" : [
                                {"name" : "id", "value" : 1, "prompt" : "Conversation id"},
                                {"name" : "user1_id", "value" : 1, "prompt" : "User_1 id"},
                                {"name" : "user2_id","value" : 4, "prompt" : "User_2 id"},
                                {"name" : "time_last_message", "value" : 950, "prompt" : "Time last message"}
                            ],
                            "links" : [
                                {"href" : "/friendsNet/api/users/1/profile/", "rel" : "user profile", "prompt" : "User profile"},
                                {"href" : "/friendsNet/api/users/4/profile/","rel" : "user contacted profile", "prompt" : "User contacted profile"},
                                {"href" : "/friendsNet/api/users/1/conversations/", "rel" : "user conversations", "prompt" : "User1 conversations"},
                                {"href" : "/friendsNet/api/users/4/conversations/", "rel" : "user conversations", "prompt" : "User2 conversations"},
                                {"href" : "/friendsNet/api/conversations/1/messages/", "rel" : "conversation messages", "prompt" : "Conversation messages"}
                            ]
                        }
                    ]
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Conversation with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/",
                    "error" : {
                        "code" : 404, "title" : "Conversation not found.", "message" : "Conversation not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/4/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }    
            
### Delete conversation [DELETE]

Delete a conversation.

+ Request
    
    + Headers
    
            Accept: application/collection+json
            
+ Response 204

    Conversation successfully deleted.

    + Body
    
+ Response 404 (application/vnd.collection+json)

    Conversation with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/999/",
                    "error" : {
                        "code" : 404, "title" : "Conversation not found.", "message" : "Conversation not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/users/1/profile/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }            

# Group Conversation messages

Messages belonging to a conversation.

## Messages list [/friendsNet/api/conversations/{conversation_id}/messages/]

Messages belonging to a conversation.

+ Parameters
    + conversation_id: 1 (int) - The id of the conversation. 

### List conversation messages [GET]

List all messages for the conversation.

+ Request


    + Headers

            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

    Messages belonging to conversation with specified id.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "links" : [
                        {"href" : "/friendsNet/api/conversations/1/", "rel" : "conversation", "prompt" : "Conversation"},
                        {"href" : "/friendsNet/api/users/1/conversations/", "rel" : "user conversations", "prompt" : "User1 conversations"},
                        {"href" : "/friendsNet/api/users/4/conversations/", "rel" : "user conversations", "prompt" : "User2 conversations"}
                    ],
                    "items" : [
                        {
                            "data" : [
                                {"name" : "conversation_id", "value" : 1, "prompt" : "Conversation id"},
                                {"name" : "sender_id", "value" : 4, "prompt" : "Sender id"},
                                {"name" : "content", "value" : "Hi :) !", "prompt" : "Message content"},
                                {"name" : "time_sent", "value" : 950, "prompt" : "Time message sent"}
                            ]
                        },                    
                        {
                            "data" : [
                                {"name" : "conversation_id", "value" : 1, "prompt" : "Conversation id"},
                                {"name" : "sender_id", "value" : 1, "prompt" : "Sender id"},
                                {"name" : "content", "value" : "Hello :)", "prompt" : "Message content"},
                                {"name" : "time_sent", "value" : 913, "prompt" : "Time message sent"}
                            ]
                        }
                    ],
                    "template" : {
                        "data" : [
                            {"name" : "sender_id", "value" : "", "prompt" : "Sender id", "required" : "true"},
                            {"name" : "content", "value" : "", "prompt" : "Content", "required" : "true"}
                        ]
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Conversation with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "error" : {
                        "code" : 404, "title" : "Conversation not found.", "message" : "Conversation not present in the system."
                    }
                }
            }
            
+ Response 406 (application/vnd.collection+json)

    The server cannot understand the response format requested by the client.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/4/messages/",
                    "error" : {
                        "code" : 406, "title" : "Response not acceptable.", "message" : "Content-Type of response not acceptable by client."
                    }
                }
            }              
            
### Add message [POST]

Create new message to the conversation.

+ Request (application/vnd.collection+json)


    + Headers

            Accept: application/collection+json
            
    + Body
    
            {
                "template" : {
                    "data" : [
                        {"name" : "sender_id", "value" : 4},
                        {"name" : "content", "value" : "Hei"}
                    ]
                }
            }

+ Response 200

    Message created correctly.

    + Body

+ Response 400 (application/vnd.collection+json)

    Data not well formed. Some of the parameters are incorrect formatted or have incorrect value.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "error" : {
                        "code" : 400, "title" : "Message in bad format.", "message" : "Message passed in a bad format for the request. Please check documentation."
                    }
                }
            }
            
+ Response 404 (application/vnd.collection+json)

    Conversation with specified id not found.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "error" : {
                        "code" : 404, "title" : "Conversation not found.", "message" : "Conversation not present in the system."
                    }
                }
            }            
            
+ Response 412 (application/vnd.collection+json)

    User not part of conversation.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/2/messages/",
                    "error" : {
                        "code" : 412, "title" : "User not part of conversation.", "message" : "User doesn't belong to the conversation so he cannot send any messages."
                    }
                }
            }             
            
+ Response 415 (application/vnd.collection+json)

    The server cannot understand the format of the request body.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "error" : {
                        "code" : 415, "title" : "Error in request body format.", "message" : "Server cannot understand format of request body.
                    }
                }
            }
            
+ Response 500 (application/vnd.collection+json)

    The server cannot store resource in the database.

    + Body
    
            {
                "collection" : {
                    "version" : "1.0",
                    "href" : "/friendsNet/api/conversations/1/messages/",
                    "error" : {
                        "code" : 500, "title" : "Error in saving data.", "message" : "Server cannot store resource in the database."
                    }
                }
            }